pipeline {
  agent {
    docker {
      image 'smkayathiri/maven-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }
  stages{
    stage('checkout') {
      steps {
        echo 'passed'
      }
    }
    stage ('Build Maven') {
      steps { 
        sh 'cd spring-boot-app && mvn clean package'
      }
    }

    stage('build docker and push to docker hub') {
      environment {
        DOCKER_IMAGE="smkayathiri/ci-cd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS=credentials('docker-cred')
      }
      steps {
        script {
          sh 'cd spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
          def dockerImage = docker.image("${DOCKER_IMAGE}")
		  env.IMAGE_NAME = ${DOCKER_IMAGE}
          docker.withRegistry("https://index.docker.io/v1/","docker-cred"){
            dockerImage.push()
          }
        }
      }
    }
    
    }
  }
}
stage('DeployToProduction') {
            steps {
                kubeconfig(caCertificate: 'MIIDBjCCAe6gAwIBAgIBATANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwptaW5p
a3ViZUNBMB4XDTI0MDkyMDEwMzAxOFoXDTM0MDkxOTEwMzAxOFowFTETMBEGA1UE
AxMKbWluaWt1YmVDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMCO
oVUtJRuyCtU/LRFG0LLfbNzeWvbJfzI7JZTreULJDBlFO4UBIc6aCD9G9MXZsrzw
K7mJLWw9kcX9+g3u6Wsm04SJirJxIwo7Qq8icwwLzM/1LPk0cr5rVo/gGkMkOocg
VfINohSTTwf0Fy6Q0HEiLV5WRdORrVDOuXf5UocSKRRoS/JxrW9it+svv9YS4gu2
KrDUljTxkcaVJ0qMJk7rSHmkU/kkqvTvbkFgAqOrJfoDpl6vySCtfyl5vBYE3fZL
VBGsJMmSfm87WmUbZcxl0snaUSoHQAaGl1RiHR62AY5UywJk1t4rn4ZTDKe6jtUC
Ii/mckjFSRLdtPzyT7cCAwEAAaNhMF8wDgYDVR0PAQH/BAQDAgKkMB0GA1UdJQQW
MBQGCCsGAQUFBwMCBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
BBSOLvPso8d490ihI7Km2GHM3dU8jjANBgkqhkiG9w0BAQsFAAOCAQEAiD3sudPe
T5JqI0HNS6fg9Wmnuj67xdpmc9rGhLvFUplKyqYEKCQ/82tCAusizNHMZY4xI/lZ
qe32WIHbZ9+bTU+gfuCk9TsJDc0KGqpDvQzK0F3wXoQx6A9NEuROd7mhqKTKZymv
9dZxIx2XAT5v3Tod7CFJ4a0oiht7aN1uaivJVJr5slTCb3yytqYqEK4OMxDH3xt/
ON2JHjGMZZY/vNgAtyy2eDt+FwcWAOYCumB73Pg/xh62fkyO+hYmaz/3D7K3f3n/
HU4iXvvtIXiejbudxrrjcqQhC1Jk0bxy0Q9d60uuh/gK8Amomy+qA9nU9XVf5l3A
yTQHYvsmIwJXuQ==', credentialsId: 'kubernetes', serverUrl: 'https://172.30.51.2:8443') {
				 // Replace the image tag dynamically using kubectl set image
            sh """
            kubectl set image deployment/spring-boot-app spring-boot-app=${env.IMAGE_NAME}
            """
                 sh 'cd spring-boot-app-manifests kubectl apply -f deployment.yml'
                 
                 
}
            }